package com.gizmo.brennon.core.migration.config;

import com.gizmo.brennon.core.BuX;
import com.gizmo.brennon.core.api.utils.Utils;
import com.gizmo.brennon.core.migration.Migration;
import com.gizmo.brennon.core.migration.MigrationManager;
import dev.endoy.configuration.api.IConfiguration;
import dev.endoy.configuration.api.ISection;
import dev.endoy.configuration.yaml.YamlConfiguration;
import dev.endoy.configuration.yaml.YamlConfigurationOptions;
import dev.endoy.configuration.yaml.YamlSection;
import dev.endoy.configuration.yaml.comments.CommentType;
import lombok.SneakyThrows;

import java.io.File;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;

public class ConfigMigrationManager implements MigrationManager
{

    private File migrationFile;
    private YamlConfiguration migrationConfiguration;

    @Override
    @SneakyThrows
    public void initialize()
    {
        final File internalFolder = new File( BuX.getInstance().getDataFolder(), "_internal" );

        if ( !internalFolder.exists() )
        {
            internalFolder.mkdirs();
        }

        this.migrationFile = new File( internalFolder, "migrations.yml" );
        if ( !migrationFile.exists() )
        {
            migrationFile.createNewFile();
        }
        migrationConfiguration = IConfiguration.loadYamlConfiguration(
            migrationFile,
            YamlConfigurationOptions.builder().useComments( true ).build()
        );
        if ( !migrationConfiguration.exists( "migrations" ) )
        {
            migrationConfiguration.set( "migrations", new ArrayList<>() );
            migrationConfiguration.setComment(
                "migrations",
                "<------ DO NOT EDIT THIS FILE, YOU MAY BREAK YOUR CONFIGS, AND IN TURN BUNGEEUTILISALSX, BY EDITING THIS FILE ------>",
                CommentType.BLOCK
            );
        }
        migrationConfiguration.save();
    }

    @Override
    public void migrate() throws Exception
    {
        final List<Class<?>> classes = Utils.getClassesInPackage( "dev.endoy.bungeeutilisalsx.common.migration.config.migrations" );

        for ( Class<?> clazz : classes )
        {
            final int migrationId = Integer.parseInt(
                clazz.getSimpleName().split( "_" )[0].replace( "v", "" )
            );
            final Migration migration = (Migration) clazz.getConstructor().newInstance();

            if ( !this.migrationExists( migrationId ) && migration.shouldRun() )
            {
                BuX.getLogger().log( Level.INFO, "Executing config migration " + clazz.getSimpleName() );
                migration.migrate();
                this.saveMigration(
                    migrationId,
                    migration.getClass().getName(),
                    System.currentTimeMillis(),
                    true
                );
                BuX.getLogger().log( Level.INFO, "Successfully executed config migration " + clazz.getSimpleName() );
            }
        }
    }

    private boolean migrationExists( final int version )
    {
        return migrationConfiguration.exists( "migrations" ) && migrationConfiguration.getSectionList( "migrations" )
            .stream()
            .anyMatch( it -> it.exists( "migration_id" ) && it.getInteger( "migration_id" ) == version
                && it.exists( "status" ) && it.getBoolean( "status" ) );
    }

    @SneakyThrows
    private void saveMigration( final int migrationId, final String name, final long timestamp, final boolean status )
    {
        final List<ISection> sections = migrationConfiguration.exists( "migrations" )
            ? migrationConfiguration.getSectionList( "migrations" )
            : new ArrayList<>();

        final ISection section = new YamlSection();
        section.set( "migration_id", migrationId );
        section.set( "migration_name", name );
        section.set( "timestamp", timestamp );
        section.set( "status", status );
        sections.add( section );

        migrationConfiguration.set( "migrations", sections );
        migrationConfiguration.save();
    }
}
